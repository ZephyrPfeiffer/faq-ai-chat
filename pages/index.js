// install node.js 18.12.1 version
import Head from 'next/head'
import NavBar from '../comps/NavBar'
import Explainer from '../comps/Explainer'
import Footer from '../comps/Footer'
import Display from '../comps/Display'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import formSchema from '@/utilities/formSchema'
import { yupResolver } from '@hookform/resolvers/yup';
import { useForm, useWatch } from "react-hook-form";
import { ToastContainer, toast } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.min.css'
import Form from '../comps/Form'
const initialState = { answer: '', question: 'What will I learn?', website: 'https://www.grammerhub.org/' }


export default function Experiment() {
  const { register, handleSubmit, watch, resetField, formState: { errors } } = useForm({
    defaultValues: {
      question: initialState.question,
      website: initialState.website,
    }, resolver: yupResolver(formSchema)
  });

  const [answer, setAnswer] = useState(initialState.answer)
  // const [question, setQuestion] = useState(initialState.question)
  // const [website, setWebsite] = useState(initialState.website)
  const [log, setLog] = useState([])
  const [loading, setLoading] = useState(false)
  const [sendQuestion, setSendQuestion] = useState(false)
  let currentQuestion = watch({ name: 'question' })

  async function onSubmit(formData) {

    setLoading(true);
    const question = formData.question;
    await setLog([...log, { question: formData.question, answer: '' }])
    try {
      // const question = formData.question;
      // console.log(question)
      const website = formData.website;
      const res = await fetch("api/answer", {
        method: 'POST',
        body: JSON.stringify({ question: question, website: website })
      })



      if (res.status !== 404) {
        const data = await res.json();
        // console.log(data)
        if (data.status === 400) {
          toast('Unable to read website')
          setLog([...log])
        } else {
          setLog([...log, { question: question, answer: data.text }])
        }
      } else {
        toast('Website not found')
        setLog([...log])
      }

      setLoading(false)

    } catch (error) {
      console.log(error.message)
      setLoading(false)
    }
  }

  useEffect(() => {
    resetField("question")
  }, [log])

  return (
    <>
      <Head>
        <title>Chatbox</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <NavBar /> */}
      <Explainer />
      <ToastContainer
        position='top-center'
      />

      <Form handleSubmit={handleSubmit} register={register} errors={errors} onSubmit={onSubmit} />
      <Display style={styles} loading={loading} log={log} />
      <Footer />

    </>
  )
}