// react
import { useEffect, useState } from 'react';

// packages
import Head from 'next/head';
import { yupResolver } from '@hookform/resolvers/yup';
import { useForm } from 'react-hook-form';
import { ToastContainer, toast } from 'react-toastify';

// components
import Display from '../comps/Display';
import Explainer from '../comps/Explainer';
import Footer from '../comps/Footer';
import Form from '../comps/Form';

// styles
import 'react-toastify/dist/ReactToastify.min.css';

// utils
import formSchema from '../utilities/formSchema';

const initialState = {
  answer: '',
  question: 'What will I learn?',
  website: 'https://www.grammerhub.org/',
};

export default function Experiment() {
  const {
    register,
    handleSubmit,
    resetField,
    formState: { errors },
  } = useForm({
    defaultValues: {
      question: initialState.question,
      website: initialState.website,
    },
    resolver: yupResolver(formSchema),
  });

  const [log, setLog] = useState([]);
  const [loading, setLoading] = useState(false);

  async function onSubmit(formData) {
    setLoading(true);
    const { question } = formData;
    setLog([...log, { question, answer: '' }]);
    try {
      const website = formData.website;
      const res = await fetch('api/answer', {
        method: 'POST',
        body: JSON.stringify({ question, website }),
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (res.status === 404) {
        toast('Website not found');
        setLog([...log]);
        return;
      }

      const data = await res.json();

      if (data.status === 400) {
        toast('Unable to read website');
        setLog([...log]);
        return;
      }

      setLog([...log, { question, answer: data.text }]);
    } catch (error) {
      console.log(error.message);
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    resetField('question');
  }, [log]);

	return (
		<>
			<Head>
				<title>Chatbox</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Explainer />
			<ToastContainer position='top-center' />
			<Form
				handleSubmit={handleSubmit}
				register={register}
				errors={errors}
				onSubmit={onSubmit}
			/>
			<Display style={styles} loading={loading} log={log} />
			<Footer />
		</>
	);
}
